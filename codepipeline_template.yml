AWSTemplateFormatVersion: 2010-09-09
Resources:
  IAMRoleCodePipeline:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - 's3:*'
                  - 'codebuild:*'
                  - 'cloudformation:*'
                  - 'elasticbeanstalk:*'
                  - "autoscaling:*"
                  - "elasticloadbalancing:*"
                  - "sns:*"
                  - "logs:*"
                  - "ec2:*"
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
            Version: 2012-10-17
  IAMRoleCodeBuild:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource:
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudWatchLogGroup}
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudWatchLogGroup}:*
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
            Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
  S3BucketPipeline:
    Type: 'AWS::S3::Bucket'
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref CodeBuildType
        Image: !Ref CodeBuildImage
        ComputeType: !Ref CodeBuildComputeType
        EnvironmentVariables: []
        PrivilegedMode: false
      ServiceRole: !GetAtt IAMRoleCodeBuild.Arn
      Name: !Sub ${AWS::StackName}-CodeBuildProject
      TimeoutInMinutes: 10
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CloudWatchLogGroup
          Status: ENABLED
          StreamName: !Ref CloudWatchLogStream
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref S3BucketPipeline
      RoleArn: !GetAtt IAMRoleCodePipeline.Arn
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            RunOrder: 1
            Configuration:
              ProjectName: !Ref CodeBuildProject
            OutputArtifacts:
            - Name: BuildArtifacts
            InputArtifacts:
            - Name: SourceArtifacts
        - Name: Deploy
          Actions:
          - Name: Artifact
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: '1'
              Provider: ElasticBeanstalk
            InputArtifacts:
            - Name: BuildArtifacts
            OutputArtifacts: []
            Configuration:
              ApplicationName: !Ref ElasticBeanstalkApplication
              EnvironmentName: !Ref ElasticBeanstalkEnvironment
            RunOrder: 1
Parameters:
  GitHubUser:
    Type: String
    Description: GitHub User
  GitHubRepo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
  GitHubBranch:
    Type: String
    Description: GitHub Branch
  GitHubToken:
    NoEcho: true
    Type: String
  ElasticBeanstalkApplication:
    Type: String
  ElasticBeanstalkEnvironment:
    Type: String
  CodeBuildType:
    Type: String
    Default: LINUX_CONTAINER
  CodeBuildImage:
    Type: String
    Default: aws/codebuild/amazonlinux2-x86_64-standard:3.0
  CodeBuildComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
  CloudWatchLogGroup:
    Type: String
    Description: CodeBuild Log Group
  CloudWatchLogStream:
    Type: String
    Description: CodeBuild Log Stream
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${CodePipeline}
    Description: CodePipeline URL
